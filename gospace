#!/bin/bash

# gospace: A Workspace manager for Go
# Inspired by Python's virtualenv


# Set GOSPACE_HOME to ~/.gospaces, but don't override
# user preferences
if [ -z "$_GOSPACE_HOME" ] ; then
  _GOSPACE_HOME=~/.gospaces
  export _GOSPACE_HOME
fi


# Clear the command hash table so our changes to PATH are respected
reset_shell_hash () {
  if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r 2>/dev/null
  fi
}

# Exit an existing gospace, and clean up
_gospace_exit () {
  # Restore the GOPATH
  if [ -n "$_GOSPACE_OLD_GOPATH" ] ; then
    GOPATH=$_GOSPACE_OLD_GOPATH
    export GOPATH
    unset _GOSPACE_OLD_GOPATH
  fi

  # Restore the PATH
  if [ -n "$_GOSPACE_OLD_PATH" ] ; then
    PATH=$_GOSPACE_OLD_PATH
    export PATH
    unset _GOSPACE_OLD_PATH

    reset_shell_hash
  fi

  unset GOSPACE
}

# Enter a new gospace
_gospace_enter () {
  local gospace_name=$1
  local gospace_location=$_GOSPACE_HOME/$gospace_name

  _GOSPACE_OLD_GOPATH=$GOPATH
  GOPATH=$gospace_location
  export GOPATH

  _GOSPACE_OLD_PATH=$PATH
  PATH=$gospace_location/bin:$PATH
  export PATH

  reset_shell_hash

  mkdir -p $gospace_location
  GOSPACE=$gospace_name
  export GOSPACE
}


# Main entry point
gospace () {
  if [ "$1" = "enter" ] ; then
    if [ -z "$2" ] ; then
      echo "Usage: gospace enter workspace"
    else
      _gospace_enter $2
    fi
  elif [ "$1" = "exit" ] ; then
    _gospace_exit
  else
    echo "Usage: gospace [enter workspace|exit]"
  fi
}


# Bash completion
_gospace () {
  local cur use prev

  COMPREPLY=()

  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  opts="enter exit"

  if [ "$prev" = "enter" ] ; then
    use=""
    for gospace in `ls -d $_GOSPACE_HOME/$cur*` ; do
      use="$use `basename $gospace`"
    done
  else
    case "${cur}" in
      en*) use="enter" ;;
      ex*) use="exit" ;;
      e*)  use="enter exit" ;;
    esac
  fi

  COMPREPLY=( $( compgen -W "$use" -- $cur ) )
}

#TODO: Check this is available
complete -F _gospace gospace
